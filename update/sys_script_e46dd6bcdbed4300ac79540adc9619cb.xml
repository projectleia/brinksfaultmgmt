<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_brla_fm_fault_alert</collection>
        <condition>current.processing_status == 'In process' &amp;&amp; current.fault.dispatch_to == 'N/A'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Process clear code</name>
        <onclick/>
        <order>520</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var cleared = false;
	//find fault that this code clears
	var fault_code = new GlideRecord('x_brla_fm_fault_code');
	var qc = fault_code.addQuery('clear_code', current.fault+'');
	if(current.fault.related_codes != '') {
		qc.addOrCondition('clear_code','IN',current.fault.related_codes+'');
	}	
	fault_code.query();
	while(fault_code.next()) {
		//find fault alert with code and device
		var fault_alert = new GlideRecord('x_brla_fm_fault_alert');
		fault_alert.addQuery('fault_code', fault_code.fault_code);
		fault_alert.addQuery('device', current.device);
		fault_alert.addNotNullQuery('case_record');
		fault_alert.query();
		while(fault_alert.next()) {
			var fault_case = new GlideRecord('x_brla_fm_fault_case');
			fault_case.addActiveQuery();
			fault_case.addQuery('sys_id', fault_alert.case_record);
			fault_case.query();
			while(fault_case.next()) {
				fault_case.state = 3;
				fault_case.work_notes = 'Clearing code ' + current.fault_code + ' received at ' + current.host_timestamp.getDisplayValue() + ': ' + current.fault.description;
				fault_case.update();
				current.case_record = fault_case.sys_id+'';
				cleared = true;
			}
		}
	}
	if(cleared) {
		current.processing_status = 'Case Cleared';
	}
	else {
		current.processing_status = 'Ignored';
		current.processing_message = 'Clear Code - no active Cases to clear';
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>manish.admin</sys_created_by>
        <sys_created_on>2017-09-29 11:11:05</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e46dd6bcdbed4300ac79540adc9619cb</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>Process clear code</sys_name>
        <sys_overrides/>
        <sys_package display_value="Fault Management" source="x_brla_fm">91133bffdb5d4300f2f358a8dc9619d3</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Fault Management">91133bffdb5d4300f2f358a8dc9619d3</sys_scope>
        <sys_update_name>sys_script_e46dd6bcdbed4300ac79540adc9619cb</sys_update_name>
        <sys_updated_by>lexi.admin</sys_updated_by>
        <sys_updated_on>2018-02-02 17:13:34</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
