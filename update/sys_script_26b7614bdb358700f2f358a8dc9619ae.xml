<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_brla_fm_fault_alert</collection>
        <condition>current.processing_status == 'In process'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Process update case</name>
        <onclick/>
        <order>540</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	//need to check how many faults with this code against this device, that HAVENT been cleared
	var fault_alert = new GlideRecord('x_brla_fm_fault_alert');
	fault_alert.addQuery('device', current.device);
	var qc = fault_alert.addQuery('fault', current.fault);
	if(current.fault.related_codes != '') {
		qc.addOrCondition('fault','IN',current.fault.related_codes+'');
	}
	fault_alert.addNotNullQuery('case_record');
	fault_alert.addQuery('processing_status', 'Case Created');
	fault_alert.query();
	var case_id = '';
	if (fault_alert.next()) {
		if(case_id != fault_alert.case_record+'') {
			var fault_case = new GlideRecord('x_brla_fm_fault_case');
			fault_case.addActiveQuery();
			fault_case.addQuery('sys_id', fault_alert.case_record+'');
			fault_case.query();
			if(fault_case.next()) {
				if(fault_case.state == 6) {
					//Case is in Resolved state, need to set it back to WIP/Dispatch
				}
				fault_case.work_notes = 'Code ' + current.fault_code + ' received at ' + current.host_timestamp.getDisplayValue() + ': ' + current.fault.description;
				fault_case.update();
				current.case_record = fault_case.sys_id+'';
			}
		}
		case_id = fault_alert.case_record+'';
	}
	if (current.case_record) current.processing_status = 'Case Updated';
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>lexi.admin</sys_created_by>
        <sys_created_on>2017-10-18 17:18:41</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>26b7614bdb358700f2f358a8dc9619ae</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Process update case</sys_name>
        <sys_overrides/>
        <sys_package display_value="Fault Management" source="x_brla_fm">91133bffdb5d4300f2f358a8dc9619d3</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Fault Management">91133bffdb5d4300f2f358a8dc9619d3</sys_scope>
        <sys_update_name>sys_script_26b7614bdb358700f2f358a8dc9619ae</sys_update_name>
        <sys_updated_by>lexi.admin</sys_updated_by>
        <sys_updated_on>2018-02-02 16:21:10</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
