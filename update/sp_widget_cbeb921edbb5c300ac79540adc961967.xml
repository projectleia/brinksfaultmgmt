<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function ($scope, $http, spUtil, nowAttachmentHandler, $rootScope, $sanitize, $window, $sce, i18n, $timeout, $log, spAriaUtil, $location) {
	var c = this;
	c.quantity = 1;
	c.prefill_variables = [];

	if ($scope.data.sc_cat_item) {
		$scope.data.sc_cat_item.description = $sce.trustAsHtml($scope.data.sc_cat_item.description);
	}

	c.widget._debugContextMenu = [
		[ i18n.getMessage("Open") + " sc_cat_item", function(){
			var item = c.data.sc_cat_item;
			$window.open("/sp_config?id=form&table=" + item.table + "&sys_id=" + item.sys_id); }]
	];

	//set fields from url parameters	
	c.getPrefillParams = function() {
		var url_params = $location.search();
		for (var param in url_params) {
			if (param.indexOf('prefill_') == 0) {
				//is a prefill parameter
				c.prefill_variables.push({
					name: param.slice(8), 
					value: url_params[param] 
				});
			}
		}
	};
	c.getPrefillParams();

	c.setPrefillVariables = function() {
		if (!g_form) {
			return;
		}
		for (var pfv = 0; pfv < c.prefill_variables.length; pfv++) {
			g_form.setValue(c.prefill_variables[pfv].name, c.prefill_variables[pfv].value);
		}
	};

	c.showAddCartBtn = function() {
		return c.options.show_add_cart_button &&
			c.data.sc_cat_item.sys_class_name !== "sc_cat_item_producer" &&
			!c.data.sc_cat_item.no_cart;
	};

	c.showQuantitySelector = function() {
		return c.data.sc_cat_item.sys_class_name !== "sc_cat_item_producer" &&
			!c.data.sc_cat_item.no_quantity &&
			(!c.data.sc_cat_item.no_order_now || !c.data.sc_cat_item.no_cart);
	};

	c.showOrderNowButton = function() {
		return c.data.sc_cat_item.use_sc_layout || !c.data.sc_cat_item.no_order_now;
	};

	c.allowOrder = function() {
		if (c.data.sc_cat_item.use_sc_layout)
			return true;

		if (c.data.sc_cat_item.no_order)
			return false;

		if (c.data.sc_cat_item.no_order_now && c.data.sc_cat_item.no_cart)
			return false;

		return true;
	};

	$scope.$on('dialog.upload_too_large.show', function(e){
		$log.error($scope.m.largeAttachmentMsg);
		spUtil.addErrorMessage($scope.m.largeAttachmentMsg);
	});

	$scope.m = $scope.data.msgs;
	$scope.submitButtonMsg = $scope.m.submitMsg;
	var ah = $scope.attachmentHandler = new nowAttachmentHandler(setAttachments, appendError);
	function appendError(error) {
		spUtil.addErrorMessage(error.msg + error.fileName);
	}
	ah.setParams('sp_portal', $scope.data._attachmentGUID, 1024 * 1024 * 24);
	function setAttachments(attachments, action) {
		$scope.attachments = attachments;
		if (action === "added")
			$scope.setFocusToAttachment();
		if (action === "renamed")
			spAriaUtil.sendLiveMessage($scope.m.renameSuccessMsg);
		if (action === "deleted")
			spAriaUtil.sendLiveMessage($scope.m.deleteSuccessMsg);
	}
	$scope.attachmentHandler.getAttachmentList();

	$scope.confirmDeleteAttachment = function(attachment, $event) {
		$rootScope.$broadcast("dialog.delete_attachment.show", {
			parms: {
				ok: function() {
					$scope.attachmentHandler.deleteAttachment(attachment);
					$rootScope.$broadcast("dialog.delete_attachment.close");
				},
				cancel: function() {
					$rootScope.$broadcast("dialog.delete_attachment.close");
				},
				details: attachment.name
			}
		});
	};

	// Breadcrumbs
	if ($scope.data.sc_cat_item) {
		var bc = [{label: $scope.page.title, url: '?id=' + $scope.data.sc_catalog_page}];
		if ($scope.data.category)
			bc[bc.length] = {label: $scope.data.category.name, url: $scope.data.category.url};

		bc[bc.length] = {label: $scope.data.sc_cat_item.name, url: '#'};
		$timeout(function() {
			$scope.$emit('sp.update.breadcrumbs', bc);
		});
		spUtil.setSearchPage('sc');
	} else {
		var notFoundBC = [{label: $scope.page.title, url: '?id=' + $scope.data.sc_catalog_page}];
		$timeout(function() {
			$scope.$emit('sp.update.breadcrumbs', notFoundBC);
		});
		spUtil.setSearchPage('sc');
	}

	var g_form;
	$scope.$on('spModel.gForm.initialized', function(e, gFormInstance){
		g_form = gFormInstance;
		c.setPrefillVariables();

		// This runs after all onSubmit scripts have executed
		g_form.$private.events.on('submitted', function(){
			if ($scope.data.sc_cat_item.item_action === "order")
				getOne();
			else if ($scope.data.sc_cat_item.item_action === "add_to_cart")
				addToCart();
		});
	});

	$scope.triggerAddToCart = function() {
		$scope.data.sc_cat_item.item_action = "add_to_cart";
		$scope.data.sc_cat_item.quantity = c.quantity;
		if (g_form)
			g_form.submit();
	};

	$scope.triggerOnSubmit = function(){
		$scope.data.sc_cat_item.item_action = "order";
		$scope.data.sc_cat_item.quantity = c.quantity;
		if (g_form)
			g_form.submit();
	};

	// order / create request
	function getOne() {
		postCatalogFormRequest().success(function(response) {
			var a = response.result ? response.result : response.answer;
			var n = a.number;
			//$scope.$emit("$$uiNotification", a.$$uiNotification);
			//$scope.$emit("$sp.sc_cat_item.submitted", a);
			if (n) {
				//case created successfully, redirect to case detail page
				//$location
				//?id=safe_issue_detail&table=x_brla_fm_fault_case&sys_id=53f0e583db358700f2f358a8dc9619c5
				var loc = {};
				loc.id = 'safe_issue_detail';
				loc.table = 'x_brla_fm_fault_case';
				loc.sys_id = a.sys_id;
				$location.search(loc);
				//issueMessage(n, a.table, a.sys_id, a.redirect_to, a.redirect_portal_url);
			}
			$scope.submitting = false;
			$scope.submitButtonMsg = $scope.m.submittedMsg;
		}).error(function(response) {
			console.log(response);
		});
	}

	function addToCart() {
		postCatalogFormRequest().success(function(response) {
			$rootScope.$broadcast("$sp.service_catalog.cart.add_item");
			$rootScope.$broadcast("$sp.service_catalog.cart.update");
			//spUtil.addInfoMessage("Added item to shopping cart");
			$scope.submitting = false;
			c.status = "Added item to shopping cart";
		});
	}

	function postCatalogFormRequest() {
		setFieldsReadonly();
		$scope.submitted = true;
		$scope.submitting = true;
		var requestUrl;
		var reqData = {};
		if ($scope.data.sc_cat_item.sys_class_name === "sc_cat_item_producer") {
			requestUrl = '/api/sn_sc/v1/servicecatalog/items/' + $scope.data.sc_cat_item.sys_id + '/submit_producer';
			for(var obj in $scope.data.sc_cat_item._fields)
				reqData[$scope.data.sc_cat_item._fields[obj].variable_name] = $scope.data.sc_cat_item._fields[obj].value;
			reqData = {'variables' : reqData, 'attachment_id' : $scope.data._attachmentGUID, 'attachment_table': 'sp_portal', 'get_portal_messages': 'true'};
		}
		else {
			requestUrl = spUtil.getURL('sc_cat_item');
			reqData = $scope.data.sc_cat_item;
			reqData._attachmentGUID = $scope.data._attachmentGUID;
		}
		return $http.post(requestUrl, reqData);
	}

	// spModel populates mandatory - hasMandatory is called by the submit button
	$scope.hasMandatory = function(mandatory) {
		return mandatory && mandatory.length > 0;
	};

	// switch catalog items
	var unregister = $scope.$on('$sp.list.click', onListClick);
	$scope.$on("$destroy", function() {
		unregister();
	});

	function onListClick(evt, arg) {
		$scope.data.sys_id = arg.sys_id;
		spUtil.update($scope);
	}

	function setFieldsReadonly(){
		var allFields = g_form.getFieldNames();
		for(var fieldName in allFields){
			g_form.setReadOnly(allFields[fieldName], true);
		}
	}

	function issueMessage(n, table, sys_id, redirectTo, redirectUrl) {
		var page = table == 'sc_request' ? 'sc_request' : 'ticket';
		if (c.options.page) {page = c.options.page;}
		if (c.options.table) {table = c.options.table;}
		if (redirectTo == 'catalog_home') page = 'sc_home';
		var url = spUtil.format(c.options.url, {page: page, table: table, sys_id: sys_id});
		if (c.options.auto_redirect == "true") {
			if (redirectUrl)
				$window.location.href = redirectUrl;
			else
				$window.location.href = url;
			return;
		}

		var t = $scope.m.createdMsg + " " + n + " - ";
		t += $scope.m.trackMsg;
		t += ' <a href="' + url + '">' + $scope.m.clickMsg + '</a>';
		spUtil.addInfoMessage(t);
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.short-description {
  color: #000;
  font-weight: bold;
  font-size: 24px;
  margin-bottom: 5px;
}

.short-description {
  color: #000;
  font-size: 20px;
  margin-bottom: 10px;
}

.panel-button {
  float: none;
}

.sp-attachment-add {
  padding: 5px;
}

.p-t-none {
  padding-top: 0 !important;
}

.file-list-wrap {
  margin-bottom: 10px;
}

.quantity-selector {
  display: inline-block;
  width: 65px;
  padding-top: 2px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>color</field_list>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function(scope, elem){
	scope.setFocusToAttachment = function () {
		setTimeout(function () {
			var inboxArray = elem.find("a.view-attachment");
			inboxArray.focus();
		}, 100);
	};
}
]]></link>
        <name>Safe - Report an issue form</name>
        <option_schema>[{"name":"show_add_cart_button","label":"Show Add Cart Button","type":"boolean"},{"hint":"Define a URL Format for successful order page","name":"url","label":"Custom URL Format","type":"string"},{"displayValue":"Page","name":"page","label":"Successful Order Page","type":"reference","value":"sp_page","ed":{"reference":"sp_page"}},{"displayValue":"Table","name":"table","label":"Successful Order Table","type":"reference","value":"sys_db_object","ed":{"reference":"sys_db_object"}},{"hint":"Enable auto-redirection after ordering an item","name":"auto_redirect","label":"Auto Redirect on Successful Order","type":"boolean"}]</option_schema>
        <public>false</public>
        <roles>snc_external,snc_internal</roles>
        <script><![CDATA[// populate the 'data' variable with catalog item, variables, and variable view
(function() {
	// portal can specify a catalog and catalog category home page
	data.sc_catalog_page = $sp.getDisplayValue("sc_catalog_page") || "sc_home";
	data.sc_category_page = $sp.getDisplayValue("sc_category_page") || "sc_category";

	options.show_add_cart_button = (options.show_add_cart_button == "true");

	if (options.page) {
		var pageGR = new GlideRecord("sp_page");
		options.page = (pageGR.get(options.page)) ? pageGR.getValue("id") : null;
	}

	if (options.table) {
		var tableGR = new GlideRecord("sys_db_object");
		options.table = (tableGR.get(options.table)) ? tableGR.getValue("name") : null;
	}

	options.url = options.url || "?id={page}&table={table}&sys_id={sys_id}";
	data.showPrices = $sp.showCatalogPrices();
	var m = data.msgs = {};
	m.submitMsg = gs.getMessage("Submit");
	m.submittedMsg = gs.getMessage("Submitted");
	m.createdMsg = gs.getMessage("Created");
	m.trackMsg = gs.getMessage("track using 'Requests' in the header or");
	m.clickMsg = gs.getMessage("click here to view");
	m.dialogTitle = gs.getMessage("Delete Attachment");
	m.dialogMessage = gs.getMessage("Are you sure?");
	m.dialogOK = gs.getMessage("OK");
	m.dialogCancel = gs.getMessage("Cancel");
	m.largeAttachmentMsg = gs.getMessage("Attached files must be smaller than {0} - please try again", "24MB");
	m.renameSuccessMsg = gs.getMessage("Attachment renamed successfully");
	m.deleteSuccessMsg = gs.getMessage("Attachment deleted successfully");
	
	data.sys_id = 'b61a7696db39c300ac79540adc9619e9'; //Report an Issue

	data._attachmentGUID = gs.generateGUID();
	var validatedItem = new sn_sc.CatItem('' + data.sys_id);
	if (!validatedItem.canView())
		return;

	data.sc_cat_item = $sp.getCatalogItem(data.sys_id, true);
	if (data.sc_cat_item.category) {
		var categoryJS = new sn_sc.CatCategory(data.sc_cat_item.category);
		data.category = {
			name: categoryJS.getTitle(),
			url: '?id='+data.sc_category_page+'&sys_id=' + data.sc_cat_item.category
		};
	}

	$sp.logStat('Catalog View', data.sc_cat_item.sys_class_name, data.sys_id, data.sc_cat_item.name);
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>manish.admin</sys_created_by>
        <sys_created_on>2017-10-16 13:12:08</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>cbeb921edbb5c300ac79540adc961967</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Safe - Report an issue form</sys_name>
        <sys_package display_value="Fault Management" source="x_brla_fm">91133bffdb5d4300f2f358a8dc9619d3</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Fault Management">91133bffdb5d4300f2f358a8dc9619d3</sys_scope>
        <sys_update_name>sp_widget_cbeb921edbb5c300ac79540adc961967</sys_update_name>
        <sys_updated_by>stephen.admin</sys_updated_by>
        <sys_updated_on>2017-12-11 14:33:02</sys_updated_on>
        <template><![CDATA[<div id="sc_cat_item">
  <div ng-if="::data.sc_cat_item" >

    <div>
      <div class="short-description">{{::data.sc_cat_item.short_description}}</div>
      <div ng-if="::data.sc_cat_item.description" class="description">
        <div ng-bind-html="::data.sc_cat_item.description"></div>
      </div>

      <div ng-if="::data.sc_cat_item._fields">
        <sp-cat-item item="::data.sc_cat_item" />
        <form>
          <div>
            <!-- display view and model -->
            <sp-model form-model="::data.sc_cat_item" mandatory="mandatory"></sp-model>
          </div>
          <div>
            <now-attachments-list template="sp_attachment_single_line"></now-attachments-list>

            <div ng-if="hasMandatory(mandatory)" class="alert alert-info" style="margin-top:.5em">
              <span ng-if="hasMandatory(mandatory)">${Required information} </span>
              <span ng-repeat="f in mandatory" class="label label-danger" style="margin-right:.5em; display:inline-block;">{{::f.label}}</span>
            </div>

            <span ng-if="::c.allowOrder()">
              <label ng-if="!submitted" style="float:right;font-weight:normal;cursor:pointer;">
                <sp-attachment-button></sp-attachment-button>
                <span style="padding-left:4px;">${Add attachments}</span>
              </label>
              <button ng-if="::c.showOrderNowButton()" tabindex="0" name="submit" 
                      ng-disabled="submitted" ng-click="triggerOnSubmit()" class="btn btn-primary">
                {{submitButtonMsg}}
              </button>
              <span ng-if="submitting" style="padding-left:4px">${Submitting...}</span>
            </span>

          </div>
        </form>
      </div>
    </div>
  </div>

  <sp-message-dialog name="delete_attachment"
                     title="{{m.dialogTitle}}"
                     message="{{m.dialogMessage}}"
                     ok="{{m.dialogOK}}"
                     cancel="{{m.dialogCancel}}"
                     dialog-class="delete-dialog"></sp-message-dialog>

  <div ng-if="::!data.sc_cat_item" >
    <div>
      <div><h4>${Item not found}</h4></div>
      <div>
        <p>${This item is not found or currently not available}</p>
        <p>${Suggestions}:</p>
        <ul>
          <li>${Try searching for the item}</li>
          <li>${Go to the Service Catalog homepage}</li>
        </ul>
      </div>
    </div>
  </div>

  <div class="sr-only" aria-live="assertive">{{c.status}}</div>
</div>]]></template>
    </sp_widget>
</record_update>
